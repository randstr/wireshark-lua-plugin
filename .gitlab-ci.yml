


stages:
  - build
  - deploy
  - upload

variables:
  PACKAGE_VERSION: "0.1.1"
  LINUX_AMD64_BINARY: "wireshark-${WIRESHARK_VERSION}-lua-plugin-${PACKAGE_VERSION}.tar.gz"
  LINUX_AMD64_SHA256: "wireshark-${WIRESHARK_VERSION}-lua-plugin-${PACKAGE_VERSION}.tar.gz.sha256sum.txt"
  WINDOWS_AMD64_BINARY: "wireshark-${WIRESHARK_VERSION}-lua-plugin-${PACKAGE_VERSION}.zip"
  WINDOWS_AMD64_SHA256: "wireshark-${WIRESHARK_VERSION}-lua-plugin-${PACKAGE_VERSION}.zip.sha256sum.txt"
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/wireshark-lua-plugin/${PACKAGE_VERSION}"

compile-gcc:
  variables:
    WIRESHARK_VERSION: "4.1"
  image: registry.gitlab.com/jvalverde/wireshark-lua-plugin/wireshark-ubuntu-dev
  stage: build
  script:
    - mkdir build
    - cd build
    - cmake ..
    - make
    - make install
    - make test
    - make docs
    - make package
  artifacts:
    paths:
      - build/${LINUX_AMD64_BINARY}
      - build/${LINUX_AMD64_SHA256}
      - build/doc

compile-mingw:
  variables:
    WIRESHARK_VERSION: "4.1"
  image: registry.gitlab.com/jvalverde/wireshark-lua-plugin/wireshark-mingw-dev
  stage: build
  script:
    - mkdir build
    - cd build
    - Wireshark_DIR=/opt/wireshark/cmake mingw64-cmake ..
    - make
    - make package_zip
  artifacts:
    paths:
      - build/${WINDOWS_AMD64_BINARY}
      - build/${WINDOWS_AMD64_SHA256}

pages:
  stage: deploy
  dependencies:
    - compile-gcc
  script:
    - mv build/doc public/
  artifacts:
    paths:
      - public
  only:
    - main

upload:
  variables:
    WIRESHARK_VERSION: "4.1"
  stage: upload
  image: curlimages/curl:latest
#  rules:
#    - if: $CI_COMMIT_TAG
  dependencies:
    - compile-gcc
    - compile-mingw
  script:
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file build/${LINUX_AMD64_BINARY} "${PACKAGE_REGISTRY_URL}/${LINUX_AMD64_BINARY}"
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file build/${LINUX_AMD64_SHA256} "${PACKAGE_REGISTRY_URL}/${LINUX_AMD64_SHA256}"
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file build/${WINDOWS_AMD64_BINARY} "${PACKAGE_REGISTRY_URL}/${WINDOWS_AMD64_BINARY}"
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file build/${WINDOWS_AMD64_SHA256} "${PACKAGE_REGISTRY_URL}/${WINDOWS_AMD64_SHA256}"
  only:
    - main
