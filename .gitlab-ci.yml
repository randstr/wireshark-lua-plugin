


stages:
  - build
  - deploy
  - upload

variables:
  WIRESHARK_VERSION: "4.5"
  PACKAGE_VERSION: "0.3.0"
  LINUX_AMD64_BINARY: "wireshark-lua-plugin-${WIRESHARK_VERSION}-${PACKAGE_VERSION}-x64-linux.tar.gz"
  LINUX_AMD64_SHA256: "wireshark-lua-plugin-${WIRESHARK_VERSION}-${PACKAGE_VERSION}-x64-linux.tar.gz.sha256sum.txt"
  WINDOWS_AMD64_BINARY: "wireshark-lua-plugin-${WIRESHARK_VERSION}-${PACKAGE_VERSION}-x64-windows.zip"
  WINDOWS_AMD64_SHA256: "wireshark-lua-plugin-${WIRESHARK_VERSION}-${PACKAGE_VERSION}-x64-windows.zip.sha256sum.txt"
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/wireshark-lua-plugin/${PACKAGE_VERSION}"

compile-gcc:
  image: registry.gitlab.com/jvalverde/wireshark-lua-plugin/wireshark-ubuntu-dev
  stage: build
  script:
    - mkdir build
    - cd build
    - cmake ..
    - make
    - make install
    - make test
    - make docs
    - make package
  artifacts:
    paths:
      - build/wireshark-lua-plugin-*.tar.gz
      - build/wireshark-lua-plugin-*.tar.gz.sha256sum.txt
      - build/doc

compile-mingw:
  image: registry.gitlab.com/jvalverde/wireshark-lua-plugin/wireshark-mingw-dev
  stage: build
  script:
    - mkdir build
    - cd build
    - Wireshark_DIR=/opt/wireshark/cmake mingw64-cmake ..
    - make
    - make package_zip
  artifacts:
    paths:
      - build/wireshark-lua-plugin-*.zip
      - build/wireshark-lua-plugin-*.zip.sha256sum.txt

pages:
  stage: deploy
  dependencies:
    - compile-gcc
  script:
    - mv build/doc public/
  artifacts:
    paths:
      - public
  only:
    - master

upload:
  stage: upload
  image: curlimages/curl:latest
  rules:
    - if: $CI_COMMIT_TAG
  dependencies:
    - compile-gcc
    - compile-mingw
  script:
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file build/${LINUX_AMD64_BINARY} "${PACKAGE_REGISTRY_URL}/${LINUX_AMD64_BINARY}"
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file build/${LINUX_AMD64_SHA256} "${PACKAGE_REGISTRY_URL}/${LINUX_AMD64_SHA256}"
    # The Windows binaries are uploaded manually from an MSYS2 UCRT build.
